configuration:
    # Configure a default setup of Home Assistant (frontend, api, etc)
    default_config:

    logger:
      default: debug

    tts:
      - platform: google_translate

    group:
      livingroom:
        entities:
          - light.livingroom_left
          - light.livingroom_right
      bathroom:
        entities:
          - light.bathroom_left
          - light.bathroom_right

    ########## Scenes
    scene static:
      - name: bathroom_off
        entities:
          light.bathroom_left:
            state: 'off'
          light.bathroom_right:
            brightness: 1
            rgb_color: [1,0,0]
            state: 'on'

      - name: bathroom_morning
        entities:
          group.bathroom:
            brightness_pct: 70
            kelvin: 6000
            state: on

      - name: bathroom_evening
        entities:
          group.bathroom:
            brightness_pct: 20
            kelvin: 2750
            state: 'on'

      - name: livingroom_morning
        entities:
          group.livingroom:
            brightness_pct: 100
            kelvin: 6000
            state: 'on'
          switch.uvb:
            state: 'on'
          switch.uva:
            state: 'off'
          switch.planet:
            state: 'off'

      - name: livingroom_evening
        entities:
          group.livingroom:
            brightness_pct: 30
            kelvin: 2750
            state: 'on'
          switch.planet:
            state: 'on'
          switch.uva:
            state: 'off'
          switch.uvb:
            state: 'off'

      - name: livingroom_off
        entities:
          group.livingroom:
            state: 'off'
          switch.uva:
            state: 'off'
          switch.uvb:
            state: 'off'
          switch.planet:
            state: 'off'


    ########## Automations
    automation static:

      - alias: party
        trigger: []
        condition: []
        action:
          - service: lifx.effect_colorloop
            data:
              brightness: 180
              period: 20
              change: 30
              spread: 120
            entity_id: group.livingroom
          - service: switch.turn_on
            data:
              entity_id: switch.uva
          - service: switch.turn_on
            data:
              entity_id: switch.planet
        mode: single

      - alias: Morning
        description: 'Turn lights on'
        trigger:
        - platform: time
          at: '4:00'
        condition: []
        action:
        - service: scene.turn_on
          data:
            transition: 10
          entity_id: scene.livingroom_morning
        - service: scene.turn_on
          data:
            transition: 10
          entity_id: scene.bathroom_morning
        mode: single

      - alias: Sunrise
        description: 'Turn off livingroom lights'
        trigger:
        - platform: sun
          event: sunrise
          offset: "-00:35:00"
        condition: []
        action:
        - service: light.turn_off
          entity_id: light.livingroom
          data:
            transition: 2700
        - alias: "Wait for fade to finish"
          wait_for_trigger:
            - platform: state
              entity_id: light.livingroom
              to: "off"
              for: "00:10:00"
        - service: switch.turn_off
          entity_id: switch.uvb

        mode: single

      - alias: Sunset
        description: 'Turn on lights'
        trigger:
        - platform: sun
          event: sunset
          offset: "-00:55:00"
        condition: []
        action:
        - service: scene.turn_on
          entity_id: scene.livingroom_evening
          data:
            transition: 2700
        mode: single

      - alias: Lights Out
        description: 'Lights out with a 15 minute warning '
        trigger:
        - platform: time
          at: '21:00'
        condition: []
        action:
        - service: lifx.effect_pulse
          data:
            period: 0.5
            cycles: 3
            color_name: green
            mode: breathe
            power_on: false
          entity_id: group.livingroom
        - service: scene.turn_on
          data:
            transition: 900
          entity_id: scene.livingroom_off
        mode: single

      - alias: Garden Light On
        trigger:
          - platform: time
            at: '8:00'
        action:
          - service: switch.turn_on
            entity_id: switch.grow_lamp
        mode: single

      - alias: Garden Light Off
        trigger:
          - platform: time
            at: '20:00'
        action:
          - service: switch.turn_off
            entity_id: switch.grow_lamp
        mode: single
    ########## Template Lights
    light:
      - platform: template
        lights:
          livingroom:
            friendly_name: Livingroom
            level_template: "{{ state_attr('light.livingroom_left', 'brightness')|int }}"
            value_template: "{{ states('light.livingroom_left') }}"
              # this is a hack. FIXME: open a pull request to make min_mireds a configurable value
            temperature_template: >-
              {% set color_temp = state_attr('light.livingroom_left', 'color_temp')|default(255,true) %}
              {% set min_mireds = state_attr('light.livingroom', 'min_mireds') %}
              {% if color_temp < min_mireds %}
              {{ min_mireds }}
              {% else %}
              {{ color_temp }}
              {% endif %}
            color_template: "{{ state_attr('light.livingroom_left', 'hs_color')|default('(0,0)',true) }}"
            turn_on:
              service: scene.turn_on
              data:
                entity_id:  "scene.livingroom_{%- if is_state_attr('sun.sun', 'rising', true) -%}morning{%- else -%}evening{%- endif -%}"
                transition: 1
            turn_off:
              - service: light.turn_off
                data:
                  entity_id: group.livingroom
                  transition: 1
              - service: switch.turn_off
                data:
                  entity_id: switch.planet
              - service: switch.turn_off
                data:
                  entity_id: switch.uva
              - service: switch.turn_off
                data:
                  entity_id: switch.uvb

            set_temperature:
              - service: light.turn_on
                data:
                  entity_id:  group.livingroom
                  color_temp: "{{ color_temp }}"
            set_level:
              - service: light.turn_on
                data:
                  entity_id:  group.livingroom
                  brightness: "{{ brightness }}"
            set_white_value:
              - service: light.turn_on
                data:
                  entity_id:  group.livingroom
                  white_value: "{{ white_value }}"
            set_color:
              - service: light.turn_on
                data:
                  entity_id:  group.livingroom
                  hs_color:
                    - "{{ h }}"
                    - "{{ s }}"
          bathroom:
            friendly_name: Bathroom
            level_template: "{{ state_attr('light.bathroom_left', 'brightness')|int }}"
            value_template: "{{ states('light.bathroom_left') }}"
              # this is a hack. FIXME: open a pull request to make min_mireds a configurable value
            temperature_template: >-
              {% set color_temp = state_attr('light.bathroom_left', 'color_temp')|default(255,true) %}
              {% set min_mireds = state_attr('light.bathroom', 'min_mireds') %}
              {% if color_temp < min_mireds %}
              {{ min_mireds }}
              {% else %}
              {{ color_temp }}
              {% endif %}
            color_template: "{{ state_attr('light.bathroom_left', 'hs_color')|default('(0,0)',true) }}"
            turn_on:
              service: scene.turn_on
              data:
                entity_id:  "scene.bathroom_{%- if is_state_attr('sun.sun', 'rising', true) -%}morning{%- else -%}evening{%- endif -%}"
                transition: 1
            turn_off:
              service: scene.turn_on
              data:
                entity_id: scene.bathroom_off
                transition: 1

            set_temperature:
              - service: light.turn_on
                data:
                  entity_id:  group.bathroom
                  color_temp: "{{ color_temp }}"
            set_level:
              - service: light.turn_on
                data:
                  entity_id:  group.bathroom
                  brightness: "{{ brightness }}"
            set_white_value:
              - service: light.turn_on
                data:
                  entity_id:  group.bathroom
                  white_value: "{{ white_value }}"
            set_color:
              - service: light.turn_on
                data:
                  entity_id:  group.bathroom
                  hs_color:
                    - "{{ h }}"
                    - "{{ s }}"

    ########## System Config
    homeassistant:
      name: "The Witch's Spire"
      latitude: 0
      longitude: 0
      elevation: 80
      unit_system: metric
      time_zone: America/Vancouver
      external_url: "https://iot.siliconsorceress.com/"
      legacy_templates: false

    ########## lifx lights
    lifx:
      light:
        - broadcast: 10.64.36.64 #LR Right
        - broadcast: 10.64.36.65 #LR Left
        - broadcast: 10.64.36.66 #Bathroom Right
        - broadcast: 10.64.36.67 #Bathroom Left

    tplink:
      discovery: false
      switch:
        - host: 10.64.36.68
        - host: 10.64.36.69
        - host: 10.64.36.70
        - host: 10.64.36.71
##########  Home Assistant Chart Configuration
home-assistant:
  common:
    initContainers:
    - name: init-config
      image: busybox:latest
      command:
        - sh
        - -xc
        - |
          if [ ! -f /config/.storage/onboarding ]; then
            install -D /configmap/onboarding /config/.storage/onboarding
          fi
          touch /config/automations.yaml
          touch /config/scenes.yaml
          touch /config/groups.yaml
          touch /config/scripts.yaml

      volumeMounts:
          - name: config
            mountPath: /config
          - name: configmap-overlay
            mountPath: /configmap

  hostNetwork: false

  # Enable passing thru a USB device to Home Assistant
  securityContext:
    privileged: false

  # Allow access a Git repository by passing in a private SSH key
  git:
    # Raw SSH private key
    deployKey: ""
    # Base64-encoded SSH private key. When both variables are set, the raw SSH key takes precedence.
    deployKeyBase64: ""

  # Enable a prometheus-operator servicemonitor
  prometheus:
    serviceMonitor:
      enabled: true
      # interval: 1m
      # additionalLabels: {}

  persistence:
    config:
      enabled: true
      emptyDir: false
      ## Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      # storageClass: "-"
      # accessMode: ReadWriteOnce
      # size: 1Gi
      ## Do not delete the pvc upon helm uninstall
      # skipuninstall: false
      existingClaim: home-assistant

       # Path to your Z-Wave / Zigbee device in the container
  additionalVolumeMounts:
      - name: configmap-overlay
        mountPath: "/config/configuration.yaml"
        subPath: configuration.yaml
  additionalVolumes:
      - name: configmap-overlay
        configMap:
          name: home-assistant


